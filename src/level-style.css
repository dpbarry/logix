
@property --lightBlue {
  syntax: '<color>';
  initial-value: rgb(110,155,250,.28);
  inherits: false;
}

@property --darkBlue {
  syntax: '<color>';
  initial-value: rgb(110,155,250,.51);
  inherits: false;
}


:root {
  --domainButtonHeight: 56px;
  --bgColor:  #FFF;
  --baseColor: black;
  --cellColor: #FFF;
  --buttonColor: #FFF;
}

body {
  background-color: var(--bgColor);
}

#domain.correct {
  justify-content: right;
  transition: gap 0.6s, bottom 0.6s;
  gap: 0px;
  bottom: calc(0.15 * var(--domainButtonHeight));


  button:not(:first-child) {
    transition: width 0.6s, font-size 0.6s, padding 0.6s, border 0.6s, flex-basis 0.6s, bottom 0.3s;
    box-shadow: none;
    border: 0px;
    width: 0;
    bottom: -8px;

    &::before {transition: opacity 0.6s; opacity: 0;}
    p {
      transition: font-size 0.6s, border 0.6s, color 0.6s;
      border: 1px solid transparent;
      color: transparent;
      font-size: 0;
    }

  }


  button:first-child {
    height: var(--domainButtonHeight);
    flex-basis: 100%;
    width: 100%;
    border: 1px solid black;
    background: repeating-linear-gradient(45deg, var(--lightBlue),  var(--darkBlue) , var(--lightBlue) 600px);
    background-size: calc(600px/sin(45deg)) 100%;
    animation: glow 2.5s linear infinite reverse;
    transition: --lightBlue 0.25s, --darkBlue 0.25s;

    box-shadow: 0 0 1px 1px rgb(110,155,250,.1) !important;


    overflow: hidden;
    
    &>.ripple {
      background: rgb(110,155,250);
      transition: all .6s;
      &.run {
        opacity: 1 !important;
        transform: scale(400);
      }
    }

    p {
      transition: font-size 0.1s, opacity 0.1s;
      font-size: 0;
      opacity: 0;
    }
  }

  button:first-child:hover, button:first-child:focus {
    --lightBlue: rgb(110,155,250,.5) ;
    --darkBlue: rgb(110,155,250,.73);
    box-shadow: 0 0 3px 2px rgb(110,155,250,.15) !important;

    &:before {    filter: unset;    }
  }

  button:first-child:focus {
    transition: --lightBlue 0.25s, --darkBlue 0.25s, background 0.4s;
    background-color: rgb(110,155,250);
    &::before {
      color: white;
    }
  }

  button:first-child::before {
    content: "Next level...";
    background: transparent;
    font-family: "Source Serif 4";
    animation: spring 0.7s ease-out forwards;
    font-weight: 375;
    font-style: italic;
    height: 100%;
    width: 100%;
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%; left: 50%;
    line-height: 3.25rem;
    transition: color 0.21s;


  }

}

@keyframes glow {
  0% {
    background-position: calc(600px/sin(45deg)) 0;
  }
}

@keyframes spring {
  0% { font-size: 0rem; }
  100% { font-size: 2.25rem; }
}

#wrap_home_level {
  display: flex;
  flex-direction: column;
  position: relative;
  top: 2.25vmin;
  left: 2.25vmin;
  width: min-content;
  height: min-content;
  align-items: center;
  margin-bottom: -21px;
  cursor: pointer;
}

#home {
  background-image: url("../assets/HOME.svg");
  background-size: 100% 100%;
  display: inline-block;
  height: 37px;
  width: 37px;
  border: 0;
  background-color: transparent;
  cursor: pointer;
}
#level {
  font-family: "computer modern serif";
  font-weight: lighter;
  font-size: 1.5rem;

  position: relative;
  bottom: 2px;
  width: min-content;
  margin: 0;
}

#menu {
  position: absolute;
  top: 2vmin;

  /* Align #chevron */
  text-align: center;

  #menu_checkbox {
    display: block;
    width: 45px;
    height: 45px;

    position: absolute;
    top: -6px;
    left: -6px;

    cursor: pointer;

    opacity: 0;
    z-index: 1;
  }

  #chevron {
    position: relative;
    top: 0px;
    transition: top 0.3s cubic-bezier(0.77,0.2,0.05,1.0);
  }

  #chevron:before {
    content: "";

    display: inline-block;
    height: 24px;
    width: 24px;

    border-bottom: 3px solid #000000;
    border-right: 3px solid #000000;
    border-radius: 0px;

    rotate: 45deg;
    transition: transform 0.3s cubic-bezier(0.77,0.2,0.05,1.0);
  }

  #menu_checkbox:checked ~ #chevron:before {
    transform: rotate(180deg);
  }
  #menu_checkbox:checked ~ #chevron {
    /* Counteract apparent upwards-shift caused by rotating chevron */
    top: 15px;
  }

  ul {
    width: 100%;
    margin-top: 22px;
    padding: 0;

    list-style-type: none;

    transform: translateY(-500%);
    will-change: transform;
    transition: transform 0.35s cubic-bezier(0.77,0.2,0.05,1.0);
  }

  #menu_checkbox:checked ~ ul {
    transform: none;
  }

  li {
    display: block;
    height: 39px;
    width: 100%;
    margin-bottom: 14px;

    cursor: pointer;

    z-index: 1; /* Otherwise hitbox gets covered by #wrap_main spacing */

    opacity: 1;
    transition: opacity 0.2s, transform 0.1s;
  }

  @media(hover: hover) and (pointer: fine) {
    li:hover { opacity: 0.72; }
  }


  #info { content: url("../assets/INFO.svg"); }
  #dictionary { content: url("../assets/DICTIONARY.svg"); }
  #notes { content: url("../assets/NOTES.svg"); }
  #settings { content: url("../assets/SETTINGS.svg"); }
}

#configs {
  margin-left: 2vw;
  margin-right: 2vw;
  font-size: 1.4rem;
  font-weight: 400;
  display:flex;
  align-items: flex-end;
  justify-content: left;
  flex-wrap: wrap;
  gap: 10px;
}


#wrap_main {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

#grid {
  align-self: center;
  border-spacing: 4px;
  margin: -4px;

  td {
    font-family: "computer modern serif";
    border: 1px solid var(--baseColor);
    text-align: center;
    outline: 1px solid transparent; /* For crosshairs */
    border-radius: 4px;
    transition: background-color .19s ease-in, outline-color 0.2s ease, box-shadow 0.15s;
    width: clamp(24px, 13vh, 100px);
    height: clamp(24px, 13vh, 100px);
    font-size: clamp(1rem, 8vh, 3.5rem);
    background-image: linear-gradient(#A4C1A0 , #A4C1A0);
    background-repeat: no-repeat;
    background-size: 100% 0;
    background-position: bottom;
    z-index: 1;
    color: var(--baseColor);
  }
  td:not(.given, .x_axis, .y_axis)::before {
    content: "";
    background-color: #F1EEDC;
    opacity: 0;
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0; right: 0; top: 0; bottom: 0;
    transition: opacity 0.2s;
    z-index: -1;
  }
  td:not(.x_axis, .y_axis) {
    cursor: pointer;
    background-color: var(--cellColor);

  }


  td.given {
    background-color: #D0D0D0;
  }
  td.given > .ripple {
    background-color: rgba(220,220,220,0.65);
  }

  td.correct > .ripple {
    background-color: rgba(220,255,220,0.1);

  }

  td.noticed::before {
    opacity: 0.5;

    &.run {
      transform: scale(110);
    }
  }

  td.correct {
    background-size: 100% 100%;
    box-shadow: unset !important;
  }

  .x_axis, .y_axis {
    border: 0px;
    font-size: min(3vh, 1.7rem);
    width: min(5vh, 50px);
    height: min(5vh, 50px);
    z-index: -1;
  }

  td:focus {
    background: hsl(50, 46%, 90%) !important;
  }

  td > p {
    margin: 0;
    padding: 0;
    position: relative;
    pointer-events: none; /* Don't interfere with ripple */

    &.insert {
      animation: fade 0.16s cubic-bezier(.35,1,1,1) forwards;
    }
    &.dismiss {
      animation: fade 0.12s cubic-bezier(.65,-0.4,0,0) forwards reverse;
    }
  }
}


@keyframes fade {
  from { bottom: 12px; opacity: 0; }
  to { bottom: 0px; opacity: 1; }
}


#propositions {
  font-size: clamp(1.5rem, 4vh, 2rem);

  cursor: default;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;

  margin: 0;
  margin-left: 12.5vw;
  padding: 0;

  text-align: center;
  list-style-type: none; /* no bullet points */

  scrollbar-width: none;
  overflow-x: auto;

  -webkit-mask-image: linear-gradient(to bottom, transparent 0, black var(--top-mask-size, 0), black calc(100% - var(--bottom-mask-size, 0)), transparent 100%);
  mask-image: linear-gradient(to bottom, transparent 0, black var(--top-mask-size, 0), black calc(100% - var(--bottom-mask-size, 0)), transparent 100%);
  --top-mask-size: 0px;
  --bottom-mask-size: 0px;

  li {
    padding: 4px;
    color:  transparent;
    transition: color 0.15s;
    width: 95%;

    &:first-child { margin-top: auto; }
    &:last-child { margin-bottom: auto; }

    + li {
      border-top: 1px solid #000000;
    }

    span.entry {
      cursor: pointer;
      padding-top: 4px;
      display: inline-block;
      position: relative;

    }
    span.entry::before {
      content: "";
      display: block;
      transform: scale(0.94);
      opacity: 0;
      border-radius: 5px;
      position: absolute;
      left: 0; right: 0; top: 0; bottom: 0;
      transition: opacity 0.225s ease-out;
      background-color: hsl(50, 46%, 90%);
      box-shadow: 0 2px 1px -1px #EEE, 0 0 1px 0px #DDD;
      border: 1px solid  hsl(50, 20%, 75%);

      z-index: -1;
    }
    span.entry.correct {
      cursor: default;
    }
    span.entry:not(.correct, .highlight):hover::before {
      opacity: 0.5;

      transition: opacity 0.1s ease-in;

    }
    span.entry.highlight::before {
      opacity: 1;
      transition: opacity 0.1s ease-in;

    }
  }
}


#propositions.is-top-overflowing {
  --top-mask-size: 40px !important;
}

#propositions.is-bottom-overflowing {
  --bottom-mask-size: 40px !important;
}

#propositions::-webkit-scrollbar {
  display: none;
}
#domain::-webkit-scrollbar {
  display: none;
}

#wrap_grid_domain {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

#wrap_toolbar_domain {
  display: flex;
  flex-direction: column;
  gap: 2px;
  margin-top: -25px;
  align-items: center;
}

#toolbar {
  display: flex;
  width: 90vw;
  flex-basis: 100%;

  #pencil, #undo, #redo {
    cursor: pointer;
    background-color: transparent;
    border: 0;
    box-shadow: none;
    filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.1));
    border-radius: 50px;
    padding: 0;
  }
  #pencil {
    margin-right: auto;
    width:35px;
    height: 35px;
    transform: scale(0.9);
  }

  #pencil::after {
    content: "";
    background-image:url("../assets/PENCIL.svg");
    opacity: 0.45;
    transition: opacity 0.15s, filter 0.15s;
    background-size: 100% 100%;
    display: inline-block;
    height: 100%;
    width: 100%;
    position: relative;
    z-index: 2;
  }

  #undo, #redo {
    width: 32px;
    height: 32px;
  }

  #undo::after, #redo::after {
    content: "";
    transition: opacity 0.15s, filter 0.15s;
    background-size: 100% 100%;
    display: inline-block;
    height: 100%;
    width: 24px;
    height: 24px;

    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    z-index: 2;
  }
  #undo::after {
    background-image:url("../assets/UNDO.svg");
  }
  #redo::after {
    background-image:url("../assets/REDO.svg");
  }

  @media (hover: hover) and (pointer: fine) {
    #pencil:hover, #undo:hover, #redo:hover {
      filter: drop-shadow( 0px 2px 1px rgba(0, 0, 0, .1));

    }
    #pencil:hover::after, #undo.usable:hover::after, #redo.usable:hover::after {
      opacity: 1;
    }

  }

  #undo:not(.usable), #redo:not(.usable) {
    cursor: default;

    &::after {
      opacity: 0.35;
    }

  }

  #undo.usable::after, #redo.usable::after {
    opacity: 0.6;
  }
}

#domain {
  padding: 0;
  display: flex;
  align-items: center;
  position: relative;
  transition: opacity 1s;
  height: var(--domainButtonHeight);

  padding-top: calc(0.15 * var(--domainButtonHeight)); /* account for button visuals being 85% */


  button {
    width: 100%;
    height: 60px;
    position: relative;
    font-family: "computer modern serif";
    font-size: 2.5rem;
    background-color: var(-buttonColor);
    border-radius: 5px;
    cursor: pointer;
    text-align: center;
    z-index: 0;
    border: none;
    background: transparent;
    padding: 0;


    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 85%;
      border-radius: 11px;
      background: linear-gradient(
        to left,
        hsl(340deg 0% 45%) 0%,
        hsl(340deg 0% 60%) 8%,
        hsl(340deg 0% 60%) 92%,
        hsl(340deg 0% 45%) 100%
      );

      transition: filter 0.2s;
    }

    p {
      margin: 0;
      position: relative;
      z-index: 0;

      height: 85%;
      width: 100%;
      overflow: hidden;
      border: 1px solid black;
      box-sizing: border-box;
      
      border-radius: 11px;
      color: black;

      display: flex;
      align-items: center;
      justify-content: center;
      

      background: white;
      will-change: transform;
      bottom: 8px;
      transition: bottom 0.08s ease-out, background 0.4s;
    }
  }

  @media (hover: hover) and (pointer: fine) {
    button:hover p {
      bottom: 9px;
    }
  }
  button:focus p {
    transition: bottom 0.125s cubic-bezier(.3, .7, .4, 1.25), background 0.4s;

    background-color: hsl(50, 46%, 90%);
    bottom: 6px;

    zoom: 0.99;

  }

  button:focus::before {
    filter: brightness(0.75);
  }
  button.pushed p {
    transition: bottom 0.125s cubic-bezier(.3, .7, .4, 1.25), background 0.4s;

    bottom: 6px;

    zoom: 0.99;
  }

}

.ripple {
  background:  hsl(50, 46%, 90%);
  width: 3px;
  height: 3px;
  border-radius: 100%;
  opacity: 1;
  position: absolute;
  transition: all 0.4s cubic-bezier(.38,.23,.69,1.02);
  pointer-events: none;
  will-change: transform;
  z-index: -1;
}

.ripple.run {
  transform: scale(170);
  opacity: 0 !important;
}

/* For ripple */
td {
  position: relative;
  overflow: hidden;
}



/* Landscape layout */
@media (orientation: landscape) {

  #menu { right: clamp(15px, 1.75vw, 22px); }

  #wrap_main {
    gap: 2.25vw;
    width: 90%;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50.1%, -50%);
  }

  @media (height < 700px) {
    #domain button { font-size: calc(2.5rem - (700px - 100vh)/25);}
  }

  #propositions {
    margin: 0;
    position: relative;
    bottom: 5vh;
    display: flex;
    flex-direction: column;
    min-height: 50vh;
    max-height: 80vh;
    align-items: center;
    flex-grow: 0.5;
  }

  #wrap_toolbar_domain {
    margin-top: calc(1vh - clamp(40px, 7.5vh, 58px));
    gap: 0;
  }
  #toolbar {
    width: calc(100% - (min(5vh, 50px) + 6px));
    margin-left: calc(6px + min(5vh, 50px));
    min-height: clamp(40px, 7.5vh, 58px);
    position: relative;
    top: clamp(40px, 7.5vh, 58px);


    max-height:0;

    #pencil {
      position: absolute;
      bottom: max(min(11px, calc(10px - (750px - 100vh)/12)), -7px);
      left: -43px;
      margin: 0;
    }
    #undo {
      position: absolute;

      right: -38px;
      bottom: max(min(30px, calc(30px - (750px - 100vh)/16)), 12px);
    }
    #redo {
      position: absolute;

      right: -38px;
      bottom: max(min(-2px, calc(-2px - (750px - 100vh)/16)), -17px);
    }
  }
  #domain {
    margin-left: calc(6px + min(5vh, 50px));
    width: calc(100% - (min(5vh, 50px) + 6px));
    flex-wrap: nowrap;
    gap: 5px;
  }
}


/* Portrait layout */
@media (orientation: portrait) {
  #menu { right: 3vw; }

  #wrap_main {
    margin-top: -1px;
    flex-direction: column;
    align-content: center;
    align-items: center;
  }
  #propositions {
    margin: 0;
    margin-bottom: 1vh;
    align-self: center;
    text-align: center;
    width: 70vw;
    height: 32.75vh; /* REDUCED WHEN <4 PROPOSITIONS */
    li {
      width: unset;
    }
  }

  #wrap_toolbar_domain {
    position: relative;
    bottom: 4px;
  }
  @media (height > 700px) {
    #wrap_grid_domain {
      gap: calc((100vh - 700px) / 13);
    }
  }
  #domain {
    width: 90vw;
    flex-direction: row;
    flex-basis: 100%;
    gap: 5px;
  }
  @media (height < 700px) {
    #grid td {
      width: clamp(24px, calc(13vh - (700px - 100vh)/14), 100px);
      height: clamp(24px, calc(13vh - (700px - 100vh)/14), 100px);
      font-size: clamp(1rem, calc(8vh - (700px - 100vh)/15), 3.5rem);
    }
  }
  #grid {
    margin: 0;
    margin-right: 5.09vh;
  }
}
